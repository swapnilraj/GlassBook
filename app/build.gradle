apply plugin: 'com.android.application'
apply plugin: 'realm-android'

import com.android.build.OutputFile

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"
  splits {
    abi {
      reset()
      enable true
      universalApk false  // If true, also generate a universal APK
      include "armeabi-v7a", "x86"
    }
  }
  defaultConfig {
    applicationId "io.sixth.glassbook"
    minSdkVersion 19
    targetSdkVersion 25
    versionCode 103
    versionName "1.1"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      applicationIdSuffix ".debug"
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      // For each separate APK per architecture, set a unique version code as described here:
      // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
      def versionCodes = ["x86": 0, "armeabi-v7a": 1]
      def abi = output.getFilter(OutputFile.ABI)
      if (abi != null) {  // null for the universal-debug, universal-release variants
        output.versionCodeOverride =
            versionCodes.get(abi) + output.versionCode
      }
    }
  }
}

ext.supportLibVersion = '25.1.0'

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:support-annotations:${supportLibVersion}"
  compile 'com.facebook.stetho:stetho:1.4.2'
  compile 'com.facebook.stetho:stetho-okhttp3:1.4.2'
  compile 'com.squareup.okhttp3:okhttp:3.5.0'
  compile 'com.squareup.okio:okio:1.11.0'
  compile 'org.jsoup:jsoup:1.10.1'
  compile 'com.wdullaer:materialdatetimepicker:3.0.0'
  testCompile 'junit:junit:4.12'
}
